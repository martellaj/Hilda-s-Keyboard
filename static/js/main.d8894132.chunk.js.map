{"version":3,"sources":["Switcher.js","Keyboard.js","App.js","serviceWorker.js","index.js"],"names":["Switcher","_this","this","react_default","a","createElement","className","onClick","switchGroup","group","props","Component","Keyboard","getKeyboard","modifyText","_this2","selectedGroup","Fragment","App","state","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","text","bind","assertThisInitialized","setState","src_Switcher_0","src_Keyboard_0","letter","substring","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8894132.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Switcher.css\";\r\n\r\nclass Switcher extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"switcherContainer\">\r\n                <button\r\n                    className=\"switcherButton\"\r\n                    onClick={() => this.switchGroup(0)}\r\n                >\r\n                    A - I\r\n                </button>\r\n                <button\r\n                    className=\"switcherButton\"\r\n                    onClick={() => this.switchGroup(1)}\r\n                >\r\n                    J - R\r\n                </button>\r\n                <button\r\n                    className=\"switcherButton\"\r\n                    onClick={() => this.switchGroup(2)}\r\n                >\r\n                    S - Z\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    switchGroup(group) {\r\n        this.props.switchGroup(group);\r\n    }\r\n}\r\n\r\nexport default Switcher;\r\n","import React, { Component } from \"react\";\r\nimport \"./Keyboard.css\";\r\n\r\nclass Keyboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"keyboardContainer\">\r\n                {this.getKeyboard()}\r\n                <div className=\"keyboardRow\">\r\n                    <button\r\n                        className=\"specialKeyboardButton\"\r\n                        onClick={() => {\r\n                            this.props.modifyText(\" \");\r\n                        }}\r\n                    >\r\n                        SPACE\r\n                    </button>\r\n                    <button\r\n                        className=\"specialKeyboardButton\"\r\n                        onClick={() => {\r\n                            this.props.modifyText(\"BACKSPACE\");\r\n                        }}\r\n                    >\r\n                        BACKSPACE\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getKeyboard() {\r\n        const { selectedGroup } = this.props;\r\n\r\n        if (selectedGroup === 0) {\r\n            return (\r\n                <>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"a\");\r\n                            }}\r\n                        >\r\n                            A\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"b\");\r\n                            }}\r\n                        >\r\n                            B\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"c\");\r\n                            }}\r\n                        >\r\n                            C\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"d\");\r\n                            }}\r\n                        >\r\n                            D\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"e\");\r\n                            }}\r\n                        >\r\n                            E\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"f\");\r\n                            }}\r\n                        >\r\n                            F\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"g\");\r\n                            }}\r\n                        >\r\n                            G\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"h\");\r\n                            }}\r\n                        >\r\n                            H\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"i\");\r\n                            }}\r\n                        >\r\n                            I\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else if (selectedGroup === 1) {\r\n            return (\r\n                <>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"j\");\r\n                            }}\r\n                        >\r\n                            J\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"k\");\r\n                            }}\r\n                        >\r\n                            K\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"l\");\r\n                            }}\r\n                        >\r\n                            L\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"m\");\r\n                            }}\r\n                        >\r\n                            M\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"n\");\r\n                            }}\r\n                        >\r\n                            N\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"o\");\r\n                            }}\r\n                        >\r\n                            O\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"p\");\r\n                            }}\r\n                        >\r\n                            P\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"q\");\r\n                            }}\r\n                        >\r\n                            Q\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"r\");\r\n                            }}\r\n                        >\r\n                            R\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            /* selectedGroup === 2 */\r\n            return (\r\n                <>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"s\");\r\n                            }}\r\n                        >\r\n                            S\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"t\");\r\n                            }}\r\n                        >\r\n                            T\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"u\");\r\n                            }}\r\n                        >\r\n                            U\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"v\");\r\n                            }}\r\n                        >\r\n                            V\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"w\");\r\n                            }}\r\n                        >\r\n                            W\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"x\");\r\n                            }}\r\n                        >\r\n                            X\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"keyboardRow\">\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"y\");\r\n                            }}\r\n                        >\r\n                            Y\r\n                        </button>\r\n                        <button\r\n                            className=\"keyboardButton\"\r\n                            onClick={() => {\r\n                                this.props.modifyText(\"z\");\r\n                            }}\r\n                        >\r\n                            Z\r\n                        </button>\r\n                        <button className=\"keyboardButton\" />\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Keyboard;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Switcher from \"./Switcher\";\nimport Keyboard from \"./Keyboard\";\n\nclass App extends Component {\n    constructor(props, state) {\n        super(props, state);\n\n        this.state = {\n            selectedGroup: 0,\n            text: \"\"\n        };\n\n        this.modifyText = this.modifyText.bind(this);\n        this.switchGroup = this.switchGroup.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"textDisplay\">{this.state.text}</div>\n                <button\n                    className=\"clearButton\"\n                    onClick={() => this.setState({ text: \"\" })}\n                >\n                    CLEAR\n                </button>\n                <Switcher switchGroup={this.switchGroup} />\n                <Keyboard\n                    selectedGroup={this.state.selectedGroup}\n                    modifyText={this.modifyText}\n                />\n            </div>\n        );\n    }\n\n    switchGroup(group) {\n        this.setState({\n            selectedGroup: group\n        });\n    }\n\n    modifyText(letter) {\n        if (letter === \"BACKSPACE\") {\n            this.setState({\n                text: this.state.text.substring(0, this.state.text.length - 1)\n            });\n        } else {\n            this.setState({\n                text: this.state.text + letter\n            });\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}